/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesnâ€™t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */


/**
 * Calculate all padding margin helper mixins
 */
@include vertical-calc(1, 12) {}


/**
 * Add/remove floats
 */
.float--right, %float--right    { float:right!important; }
.float--left,  %float--left     { float:left !important; }
.float--none,  %float--none     { float:none !important; }


/**
 * Text alignment
 */
.text--left,   %text--left       { text-align:left  !important; }
.text--center, %text--center     { text-align:center!important; }
.text--right,  %text--right      { text-align:right !important; }


/**
 * Font weights
 */
.weight--light,    %weight--light     { font-weight:100!important; }
.weight--normal,   %weight--normal    { font-weight:300!important; }
.weight--semibold, %weight--semibold  { font-weight:600!important; }


/**
 * Add/remove margins
 */
.push, %push    { margin:       $base-line-height!important; }
.push--top      { margin-top:   $base-line-height!important; }
.push--right    { margin-right: $base-line-height!important; }
.push--bottom   { margin-bottom:$base-line-height!important; }
.push--left     { margin-left:  $base-line-height!important; }
.push--ends     { margin-top:   $base-line-height!important; margin-bottom:$base-line-height!important; }
.push--sides    { margin-right: $base-line-height!important; margin-left:  $base-line-height!important; }

.push-half,         %push-half          { margin:       $base-line-height / 2 !important;  }
.push-half--top,    %push-half--top     { margin-top:   $base-line-height / 2 !important;  }
.push-half--right,  %push-half--right   { margin-right: $base-line-height / 2 !important;  }
.push-half--bottom, %push-half--bottom  { margin-bottom:$base-line-height / 2 !important;  }
.push-half--left,   %push-half--left    { margin-left:  $base-line-height / 2 !important;  }
.push-half--ends,   %push-half--ends    { margin-top:   $base-line-height / 2 !important;  margin-bottom: $base-line-height / 2 !important; }
.push-half--sides,  %push-half--sides   { margin-right: $base-line-height / 2 !important; margin-left:  $base-line-height / 2 !important; }

.push-fourth,         %push-fourth          { margin:       $base-line-height / 4 !important;  }
.push-fourth--top,    %push-fourth--top     { margin-top:   $base-line-height / 4 !important;  }
.push-fourth--right,  %push-fourth--right   { margin-right: $base-line-height / 4 !important;  }
.push-fourth--bottom, %push-fourth--bottom  { margin-bottom:$base-line-height / 4 !important;  }
.push-fourth--left,   %push-fourth--left    { margin-left:  $base-line-height / 4 !important;  }
.push-fourth--ends,   %push-fourth--ends    { margin-top:   $base-line-height / 4 !important;  margin-bottom: $base-line-height / 4 !important; }
.push-fourth--sides,  %push-fourth--sides   { margin-right: $base-line-height / 4 !important;  margin-left:  $base-line-height / 4 !important; }

.flush,         %flush          { margin:       0!important; }
.flush--top,    %flush--top     { margin-top:   0!important; }
.flush--right,  %flush--right   { margin-right: 0!important; }
.flush--bottom, %flush--bottom  { margin-bottom:0!important; }
.flush--left,   %flush--left    { margin-left:  0!important; }
.flush--ends,   %flush--ends    { margin-top:   0!important; margin-bottom:0!important; }
.flush--sides,  %flush--sides   { margin-right: 0!important; margin-left:  0!important; }

/**
 * Add/remove paddings
 */
.soft,         %soft           { padding:       $base-line-height!important; }
.soft--top,    %soft--top      { padding-top:   $base-line-height!important; }
.soft--right,  %soft--right    { padding-right: $base-line-height!important; }
.soft--bottom, %soft--bottom   { padding-bottom:$base-line-height!important; }
.soft--left,   %soft--left     { padding-left:  $base-line-height!important; }
.soft--ends,   %soft--ends     { padding-top:   $base-line-height!important; padding-bottom:$base-line-height!important; }
.soft--sides,  %soft--sides    { padding-right: $base-line-height!important; padding-left:  $base-line-height!important; }

.soft-half,         %soft-half           { padding:        $base-line-height / 2 !important; }
.soft-half--top,    %soft-half--top      { padding-top:    $base-line-height / 2 !important; }
.soft-half--right,  %soft-half--right    { padding-right:  $base-line-height / 2 !important; }
.soft-half--bottom, %soft-half--bottom   { padding-bottom: $base-line-height / 2 !important; }
.soft-half--left,   %soft-half--left     { padding-left:   $base-line-height / 2 !important; }
.soft-half--ends,   %soft-half--ends     { padding-top:    $base-line-height / 2 !important; padding-bottom: $base-line-height / 2 !important; }
.soft-half--sides,  %soft-half--sides    { padding-right:  $base-line-height / 2 !important; padding-left:   $base-line-height / 2 !important; }

.hard,         %hard           { padding:       0!important; }
.hard--top,    %hard--top      { padding-top:   0!important; }
.hard--right,  %hard--right    { padding-right: 0!important; }
.hard--bottom, %hard--bottom   { padding-bottom:0!important; }
.hard--left,   %hard--left     { padding-left:  0!important; }
.hard--ends,   %hard--ends     { padding-top:   0!important; padding-bottom:0!important; }
.hard--sides,  %hard--sides    { padding-right: 0!important; padding-left:  0!important; }


/**
 * Pull items full width of `.island` parents.
 */
.full-bleed{
    margin-right:-$base-line-height !important;
    margin-left: -$base-line-height !important;

    .islet &{
        margin-right:-($base-line-height / 2)!important;
        margin-left: -($base-line-height / 2)!important;
    }
}


/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative{
    cursor:help!important;
}


/**
 * Mute an object by reducing its opacity.
 */
.muted{
    opacity:0.5!important;
    filter:alpha(opacity = 50)!important;
}


/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
.go:after{
    content:"\00A0" "\00BB"!important;
}


/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps{
    text-transform:uppercase!important;
}


/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
@mixin accessibility{
    border:0!important;
    clip:rect(0 0 0 0)!important;
    height:1px!important;
    margin:-1px!important;
    overflow:hidden!important;
    padding:0!important;
    position: absolute!important;
    width:1px!important;
}
.accessibility,
.visuallyhidden{
    @include accessibility;
}
@if $responsive{
    @each $state in $breakpoints{
        @include grid-media-query(#{$state}){
            .accessibility--#{$state},
            .visuallyhidden--#{$state}{
                @include accessibility;
            }
        }
    }
}


/**
 * Content Alignment
 */
%center, .centered{
	margin-left: auto;
	margin-right: auto;
}

%center-block, .center-block{
	@extend %center;
	
	width: 100%;
	text-align: center;
}
